# 导入函数库
from jqdata import *

# 初始化函数，设定基准等等
def initialize(context):
    # 设定沪深300作为基准
    set_benchmark('000300.XSHG')
    # 开启动态复权模式(真实价格)
    set_option('use_real_price', True)
    # 输出内容到日志 log.info()
    log.info('初始函数开始运行且全局只运行一次')

    g.a = [['600009.XSHG', '601668.XSHG', '600383.XSHG', '000876.XSHE', '000402.XSHE', '002416.XSHE', '600783.XSHG', '002310.XSHE', '601607.XSHG', '600028.XSHG'], ['002415.XSHE', '002375.XSHE', '601117.XSHG', '000728.XSHE', '600362.XSHG', '601006.XSHG', '600674.XSHG', '601318.XSHG', '002051.XSHE', '600277.XSHG'], ['600050.XSHG', '601633.XSHG', '601117.XSHG', '002051.XSHE', '600837.XSHG', '000039.XSHE', '000333.XSHE', '000776.XSHE', '002375.XSHE', '600600.XSHG'], ['600585.XSHG', '600362.XSHG', '600886.XSHG', '600104.XSHG', '000002.XSHE', '600827.XSHG', '600485.XSHG', '000157.XSHE', '600028.XSHG', '300124.XSHE'], ['600827.XSHG', '000425.XSHE', '000402.XSHE', '600104.XSHG', '000338.XSHE', '603993.XSHG', '600028.XSHG', '000792.XSHE', '601006.XSHG', '600900.XSHG'], ['600104.XSHG', '601607.XSHG', '600717.XSHG', '600642.XSHG', '600050.XSHG', '000883.XSHE', '600637.XSHG', '000425.XSHE', '600028.XSHG', '600019.XSHG'], ['600028.XSHG', '600050.XSHG', '000338.XSHE', '600637.XSHG', '601006.XSHG', '000157.XSHE', '600150.XSHG', '601901.XSHG', '601390.XSHG', '601168.XSHG'], ['000623.XSHE', '000725.XSHE', '000503.XSHE', '000729.XSHE', '600060.XSHG', '600048.XSHG', '600028.XSHG', '600177.XSHG', '000046.XSHE', '000539.XSHE'], ['600028.XSHG', '600050.XSHG', '600637.XSHG', '601607.XSHG', '000725.XSHE', '601099.XSHG', '600048.XSHG', '601216.XSHG', '000402.XSHE', '600023.XSHG'], ['000712.XSHE', '601668.XSHG', '600050.XSHG', '601699.XSHG', '300251.XSHE', '000402.XSHE', '600009.XSHG', '600048.XSHG', '600362.XSHG', '600637.XSHG'], ['600050.XSHG', '000402.XSHE', '000338.XSHE', '000623.XSHE', '601168.XSHG', '000157.XSHE', '000729.XSHE', '600688.XSHG', '601929.XSHG', '002415.XSHE'], ['600028.XSHG', '600050.XSHG', '000725.XSHE', '000623.XSHE', '601088.XSHG', '000728.XSHE', '600741.XSHG', '601628.XSHG', '601688.XSHG', '601607.XSHG'], ['000729.XSHE', '600177.XSHG', '600050.XSHG', '000623.XSHE', '601727.XSHG', '601628.XSHG', '300058.XSHE', '600066.XSHG', '000425.XSHE', '603993.XSHG'], ['601857.XSHG', '000776.XSHE', '600350.XSHG', '600649.XSHG', '601607.XSHG', '601166.XSHG', '601998.XSHG', '601788.XSHG', '600177.XSHG', '300002.XSHE'], ['601607.XSHG', '601601.XSHG', '600177.XSHG', '300017.XSHE', '000157.XSHE', '601169.XSHG', '000402.XSHE', '600050.XSHG', '600519.XSHG', '600276.XSHG'], ['600028.XSHG', '000402.XSHE', '600362.XSHG', '000623.XSHE', '600050.XSHG', '600875.XSHG', '600000.XSHG', '600717.XSHG', '600350.XSHG', '601318.XSHG'], ['600717.XSHG', '600383.XSHG', '601607.XSHG', '600104.XSHG', '002142.XSHE', '601166.XSHG', '600060.XSHG', '600350.XSHG', '002422.XSHE', '000157.XSHE'], ['000425.XSHE', '601607.XSHG', '600048.XSHG', '601333.XSHG', '601318.XSHG', '600177.XSHG', '600050.XSHG', '002236.XSHE', '601377.XSHG', '601601.XSHG'], ['601169.XSHG', '601318.XSHG', '600362.XSHG', '600028.XSHG', '600519.XSHG', '600485.XSHG', '601601.XSHG', '600252.XSHG', '000623.XSHE', '601288.XSHG'], ['000729.XSHE', '601111.XSHG', '601288.XSHG', '000623.XSHE', '600741.XSHG', '600028.XSHG', '002422.XSHE', '600016.XSHG', '600050.XSHG', '601166.XSHG'], ['600028.XSHG', '000725.XSHE', '000623.XSHE', '600352.XSHG', '601333.XSHG', '002152.XSHE', '000425.XSHE', '600104.XSHG', '601898.XSHG', '601169.XSHG'], ['601607.XSHG', '601857.XSHG', '601628.XSHG', '600100.XSHG', '600362.XSHG', '600048.XSHG', '600642.XSHG', '601601.XSHG', '000425.XSHE', '002081.XSHE'], ['601607.XSHG', '601117.XSHG', '600221.XSHG', '601601.XSHG', '000157.XSHE', '600741.XSHG', '600157.XSHG', '601688.XSHG', '601166.XSHG', '600600.XSHG'], ['601607.XSHG', '600089.XSHG', '002142.XSHE', '600037.XSHG', '600221.XSHG', '600741.XSHG', '601088.XSHG', '600362.XSHG', '000027.XSHE', '600018.XSHG'], ['000157.XSHE', '601258.XSHG', '601601.XSHG', '600037.XSHG', '002146.XSHE', '600000.XSHG', '000425.XSHE', '600089.XSHG', '600100.XSHG', '600221.XSHG'], ['600028.XSHG', '000157.XSHE', '000009.XSHE', '601006.XSHG', '600648.XSHG', '601668.XSHG', '600383.XSHG', '600741.XSHG', '600804.XSHG', '600519.XSHG'], ['000402.XSHE', '600028.XSHG', '600104.XSHG', '600519.XSHG', '000069.XSHE', '000623.XSHE', '601628.XSHG', '300146.XSHE', '600795.XSHG', '600583.XSHG'], ['600028.XSHG', '000027.XSHE', '000157.XSHE', '600660.XSHG', '601601.XSHG', '601607.XSHG', '000338.XSHE', '600023.XSHG', '000623.XSHE', '600383.XSHG'], ['601766.XSHG', '601857.XSHG', '002142.XSHE', '600221.XSHG', '000402.XSHE', '601018.XSHG', '601211.XSHG', '600309.XSHG', '000157.XSHE', '601988.XSHG'], ['600028.XSHG', '601669.XSHG', '601857.XSHG', '000725.XSHE', '000917.XSHE', '600660.XSHG', '000157.XSHE', '002142.XSHE', '600741.XSHG', '002152.XSHE'], ['600028.XSHG', '000917.XSHE', '600019.XSHG', '600741.XSHG', '601006.XSHG', '601166.XSHG', '600221.XSHG', '601818.XSHG', '000876.XSHE', '600208.XSHG'], ['000725.XSHE', '000917.XSHE', '600028.XSHG', '600221.XSHG', '002466.XSHE', '601186.XSHG', '600089.XSHG', '601318.XSHG', '601601.XSHG', '600309.XSHG'], ['000425.XSHE', '600104.XSHG', '000623.XSHE', '600089.XSHG', '601607.XSHG', '600028.XSHG', '000157.XSHE', '601318.XSHG', '601006.XSHG', '600208.XSHG'], ['000413.XSHE', '601601.XSHG', '600837.XSHG', '600100.XSHG', '600153.XSHG', '600606.XSHG', '601006.XSHG', '002415.XSHE', '000625.XSHE', '000415.XSHE'], ['600028.XSHG', '000157.XSHE', '601318.XSHG', '000415.XSHE', '002146.XSHE', '002714.XSHE', '601818.XSHG', '601211.XSHG', '601607.XSHG', '000425.XSHE'], ['600028.XSHG', '600219.XSHG', '000623.XSHE', '601318.XSHG', '601088.XSHG', '601898.XSHG', '600104.XSHG', '600221.XSHG', '600606.XSHG', '600383.XSHG'], ['601898.XSHG', '601169.XSHG', '601186.XSHG', '601607.XSHG', '600741.XSHG', '002142.XSHE', '601998.XSHG', '000623.XSHE', '600015.XSHG', '601390.XSHG'], ['601607.XSHG', '601628.XSHG', '000725.XSHE', '600219.XSHG', '600089.XSHG', '000623.XSHE', '600519.XSHG', '601186.XSHG', '000625.XSHE', '600015.XSHG'], ['600089.XSHG', '000623.XSHE', '600100.XSHG', '600050.XSHG', '000402.XSHE', '601186.XSHG', '601006.XSHG', '600219.XSHG', '601818.XSHG', '600383.XSHG'], ['000623.XSHE', '000876.XSHE', '600089.XSHG', '000423.XSHE', '601628.XSHG', '601898.XSHG', '600900.XSHG', '002608.XSHE', '002466.XSHE', '600018.XSHG'], ['600089.XSHG', '000623.XSHE', '600104.XSHG', '601898.XSHG', '000100.XSHE', '600741.XSHG', '601988.XSHG', '600518.XSHG', '000625.XSHE', '600219.XSHG'], ['000402.XSHE', '600741.XSHG', '601318.XSHG', '600104.XSHG', '600019.XSHG', '601607.XSHG', '601009.XSHG', '601601.XSHG', '601898.XSHG', '002294.XSHE'], ['000402.XSHE', '600373.XSHG', '601607.XSHG', '601318.XSHG', '600104.XSHG', '600741.XSHG', '600153.XSHG', '601628.XSHG', '601601.XSHG', '600362.XSHG'], ['600606.XSHG', '601998.XSHG', '601628.XSHG', '601288.XSHG', '601988.XSHG', '600886.XSHG', '601601.XSHG', '002146.XSHE', '600741.XSHG', '601318.XSHG'], ['600188.XSHG', '601169.XSHG', '600100.XSHG', '601988.XSHG', '601628.XSHG', '601318.XSHG', '601288.XSHG', '601607.XSHG', '000338.XSHE', '601818.XSHG'], ['601988.XSHG', '600015.XSHG', '600959.XSHG', '601288.XSHG', '600886.XSHG', '601006.XSHG', '601818.XSHG', '002146.XSHE', '000983.XSHE', '600606.XSHG'], ['600741.XSHG', '601318.XSHG', '000402.XSHE', '600705.XSHG', '600089.XSHG', '600188.XSHG', '000002.XSHE', '000415.XSHE', '601601.XSHG', '600886.XSHG'], ['601288.XSHG', '601607.XSHG', '600089.XSHG', '600519.XSHG', '000338.XSHE', '600219.XSHG', '600153.XSHG', '600050.XSHG', '601988.XSHG', '000333.XSHE'], ['600585.XSHG', '601898.XSHG', '601998.XSHG', '601628.XSHG', '601398.XSHG', '601088.XSHG', '601166.XSHG', '601601.XSHG', '601607.XSHG', '600739.XSHG'], ['601607.XSHG', '601898.XSHG', '600219.XSHG', '601828.XSHG', '600362.XSHG', '601288.XSHG', '600100.XSHG', '601088.XSHG', '000415.XSHE', '000166.XSHE'], ['601318.XSHG', '600153.XSHG', '600519.XSHG', '601601.XSHG', '600028.XSHG', '600104.XSHG', '002411.XSHE', '600741.XSHG', '002925.XSHE', '600036.XSHG'], ['002304.XSHE', '001965.XSHE', '600606.XSHG', '601998.XSHG', '600690.XSHG', '600028.XSHG', '601009.XSHG', '601006.XSHG', '601898.XSHG', '000338.XSHE'], ['601288.XSHG', '600188.XSHG', '600153.XSHG', '600089.XSHG', '000858.XSHE', '600606.XSHG', '601628.XSHG', '601818.XSHG', '600219.XSHG', '600690.XSHG'], ['601988.XSHG', '000895.XSHE', '601288.XSHG', '600606.XSHG', '002081.XSHE', '000338.XSHE', '601607.XSHG', '601818.XSHG', '601336.XSHG', '002925.XSHE'], ['601318.XSHG', '601288.XSHG', '601988.XSHG', '601898.XSHG', '600089.XSHG', '600519.XSHG', '601328.XSHG', '600340.XSHG', '601006.XSHG', '300296.XSHE'], ['601828.XSHG', '000338.XSHE', '000333.XSHE', '600009.XSHG', '601601.XSHG', '601328.XSHG', '601988.XSHG', '600690.XSHG', '600188.XSHG', '600089.XSHG'], ['000858.XSHE', '601988.XSHG', '601601.XSHG', '601288.XSHG', '601169.XSHG', '600048.XSHG', '600027.XSHG', '000568.XSHE', '600566.XSHG', '000651.XSHE']]


    
    g.k =0
    ### 股票相关设定 ###
    # 股票类每笔交易时的手续费是：买入时佣金万分之三，卖出时佣金万分之三加千分之一印花税, 每笔交易佣金最低扣5块钱
    set_order_cost(OrderCost(close_tax=0.001, open_commission=0.0003, close_commission=0.0003, min_commission=5), type='stock')

    ## 运行函数（reference_security为运行时间的参考标的；传入的标的只做种类区分，因此传入'000300.XSHG'或'510300.XSHG'是一样的）
      # 开盘时运行
    run_monthly(market_open, 1, '09:30')

# 规范化
def fucc(a):
    a1a=[]
    for i in a:
        a1a.append(normalize_code(i))
    return a1a

## 开盘时运行函数
def market_open(context):
    
    buy_list=fucc(g.a[g.k])
    g.k=g.k+1
    print(g.k)
    #total_value = context.portfolio.total_value # 获取总资产
    
    if  len(context.portfolio.positions)!=0:
        for stock in context.portfolio.positions.keys():
            if stock not in buy_list:
                order_target(stock, 0)

    buy_list2=set(buy_list)-set(context.portfolio.positions.keys())
    cash = context.portfolio.available_cash  # 取得当前的现金
    if  len(buy_list2)!=0:
        for stock in  buy_list2:
            order_value(stock,cash/len(buy_list2))
                
  