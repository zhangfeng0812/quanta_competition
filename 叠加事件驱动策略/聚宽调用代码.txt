# 导入函数库
from jqdata import *

# 初始化函数，设定基准等等
def initialize(context):
    # 设定沪深300作为基准
    set_benchmark('000300.XSHG')
    # 开启动态复权模式(真实价格)
    set_option('use_real_price', True)
    # 输出内容到日志 log.info()
    log.info('初始函数开始运行且全局只运行一次')

    g.a =[['600060.XSHG', '600383.XSHG', '000002.XSHE'], 
	['002415.XSHE', '600177.XSHG', '000776.XSHE'], 
	['600009.XSHG', '601727.XSHG', '002310.XSHE'], 
	['000157.XSHE', '600104.XSHG', '600485.XSHG'], 
	['000425.XSHE', '600038.XSHG', '002344.XSHE'], 
	['600027.XSHG', '600104.XSHG', '601857.XSHG'], 
	['600050.XSHG', '600028.XSHG', '002236.XSHE'], 
	['000503.XSHE', '601607.XSHG', '600028.XSHG'], 
	['601607.XSHG', '600649.XSHG', '600028.XSHG'], 
	['600050.XSHG', '600519.XSHG', '601633.XSHG'], 
	['600050.XSHG', '300058.XSHE', '000402.XSHE'],
	['600741.XSHG', '000540.XSHE', '600050.XSHG'],
	['000623.XSHE', '000069.XSHE', '600895.XSHG'], 
	['600649.XSHG', '601857.XSHG', '600050.XSHG'], 
	['601333.XSHG', '600009.XSHG', '000623.XSHE'], 
	['600028.XSHG', '600717.XSHG', '600027.XSHG'], 
	['600060.XSHG', '600383.XSHG', '600177.XSHG'], 
	['600104.XSHG', '600837.XSHG', '600066.XSHG'], 
	['600028.XSHG', '600519.XSHG', '000623.XSHE'], 
	['601601.XSHG', '601628.XSHG', '600816.XSHG'], 
	['000623.XSHE', '600000.XSHG', '601166.XSHG'], 
	['600100.XSHG', '601601.XSHG', '601607.XSHG'], 
	['601607.XSHG', '601318.XSHG', '000157.XSHE'], 
	['002142.XSHE', '601607.XSHG', '600028.XSHG'], 
	['000157.XSHE', '000001.XSHE', '601601.XSHG'], 
	['600028.XSHG', '600221.XSHG', '000027.XSHE'], 
	['600028.XSHG', '600252.XSHG', '000069.XSHE'], 
	['600023.XSHG', '000338.XSHE', '002081.XSHE'], 
	['600221.XSHG', '601318.XSHG', '002142.XSHE'], 
	['600028.XSHG', '600688.XSHG', '000157.XSHE'], 
	['000725.XSHE', '600111.XSHG', '002415.XSHE'], 
	['600028.XSHG', '601318.XSHG', '002714.XSHE'], 
	['002081.XSHE', '002714.XSHE', '002466.XSHE'], 
	['002466.XSHE', '601111.XSHG', '600153.XSHG'], 
	['000157.XSHE', '600221.XSHG', '002065.XSHE'], 
	['601898.XSHG', '601318.XSHG', '600050.XSHG'],
	['601898.XSHG', '600900.XSHG', '000630.XSHE'], 
	['600089.XSHG', '600383.XSHG', '600741.XSHG'], 
	['000623.XSHE', '600089.XSHG', '000630.XSHE'], 
	['600153.XSHG', '000623.XSHE', '000069.XSHE'], 
	['600219.XSHG', '600153.XSHG', '601898.XSHG'], 
	['601607.XSHG', '601898.XSHG', '600104.XSHG'], 
	['601006.XSHG', '600104.XSHG', '601088.XSHG'], 
	['600886.XSHG', '600188.XSHG', '601628.XSHG'], 
	['600036.XSHG', '601601.XSHG', '600219.XSHG'], 
	['601288.XSHG', '000839.XSHE', '601998.XSHG'], 
	['600900.XSHG', '000338.XSHE', '601318.XSHG'], 
	['600219.XSHG', '601898.XSHG', '601012.XSHG'], 
	['601998.XSHG', '601988.XSHG', '600221.XSHG'], 
	['601898.XSHG', '600219.XSHG', '000157.XSHE'], 
	['600741.XSHG', '000792.XSHE', '600104.XSHG'], 
	['000402.XSHE', '000338.XSHE', '601607.XSHG'], 
	['601818.XSHG', '600028.XSHG', '600089.XSHG'], 
	['601607.XSHG', '000408.XSHE', '601988.XSHG'], 
	['601601.XSHG', '601288.XSHG', '000338.XSHE'], 
	['000338.XSHE', '000333.XSHE', '600004.XSHG'], 
	['601288.XSHG', '000858.XSHE', '601628.XSHG']]





    
    
    
    
    
    
    
    
    g.k =0
    ### 股票相关设定 ###
    # 股票类每笔交易时的手续费是：买入时佣金万分之三，卖出时佣金万分之三加千分之一印花税, 每笔交易佣金最低扣5块钱
    set_order_cost(OrderCost(close_tax=0.001, open_commission=0.0003, close_commission=0.0003, min_commission=5), type='stock')

    ## 运行函数（reference_security为运行时间的参考标的；传入的标的只做种类区分，因此传入'000300.XSHG'或'510300.XSHG'是一样的）
      # 开盘时运行
    run_monthly(market_open, 1, '09:30')

# 规范化
def fucc(a):
    a1a=[]
    for i in a:
        a1a.append(normalize_code(i))
    return a1a

## 开盘时运行函数
def market_open(context):
    
    buy_list=fucc(g.a[g.k])
    g.k=g.k+1
    print(g.k)
    #total_value = context.portfolio.total_value # 获取总资产
    
    if  len(context.portfolio.positions)!=0:
        for stock in context.portfolio.positions.keys():
            if stock not in buy_list:
                order_target(stock, 0)

    buy_list2=set(buy_list)-set(context.portfolio.positions.keys())
    cash = context.portfolio.available_cash  # 取得当前的现金
    if  len(buy_list2)!=0:
        for stock in  buy_list2:
            order_value(stock,cash/len(buy_list2))
                
  